version: '3.8'

services:
  # Main Flask Application
  dss-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dss-flask-app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - DATABASE_URL=sqlite:///data/dss.db
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - dss-network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: dss-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dss-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: dss-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - dss-network
    depends_on:
      - dss-backend
    restart: unless-stopped

networks:
  dss-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
